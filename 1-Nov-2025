Sure ðŸ‘‡

---

### âœ… **Optimized Solution (Using unordered_set)**

**Logic:**
Store all `nums` in an `unordered_set` for O(1) lookup, then remove nodes whose values are in the set.

**Code:**

```cpp
class Solution {
public:
    ListNode* modifiedList(vector<int>& nums, ListNode* head) {
        unordered_set<int> st(nums.begin(), nums.end());
        ListNode* dummy = new ListNode(0, head);
        ListNode* prev = dummy;

        while (head) {
            if (st.count(head->val)) prev->next = head->next;
            else prev = head;
            head = head->next;
        }
        return dummy->next;
    }
};
```

**Time Complexity:** O(n + m)
**Space Complexity:** O(m)
